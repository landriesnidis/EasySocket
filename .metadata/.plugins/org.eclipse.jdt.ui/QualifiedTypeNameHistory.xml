<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="test.ServerSocketThread"/>
<fullyQualifiedTypeName name="java.lang.Class"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.manager.BaseSocketManager"/>
<fullyQualifiedTypeName name="java.net.SocketException"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.manager.BasicSocketManager"/>
<fullyQualifiedTypeName name="java.net.Socket"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.manager.ChatroomSocketManager"/>
<fullyQualifiedTypeName name="server.MySocketThread"/>
<fullyQualifiedTypeName name="server.MyListener"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.client.SocketTCPConnector"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.client.SocketTCPConnector.OnSocketReceiveListener"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.adapter.BaseDataAdapter.Check_Mode"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.adapter.BaseDataAdapter.Match_State"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.BaseServerSocketThread.DATA_RECEPTION_MODE"/>
<fullyQualifiedTypeName name="java.lang.StringBuffer"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.BaseListener"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.adapter.BaseDataAdapter"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.BaseServerSocketThread"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket_example.server.EasyServerSocketThread"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket_example.server.StringDataAapter"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket_example.server.EasyListener"/>
<fullyQualifiedTypeName name="java.lang.NullPointerException"/>
<fullyQualifiedTypeName name="java.util.Vector"/>
<fullyQualifiedTypeName name="java.net.SocketImplFactory"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.PortOccupiedException"/>
<fullyQualifiedTypeName name="java.net.BindException"/>
<fullyQualifiedTypeName name="javax.tools.FileObject"/>
<fullyQualifiedTypeName name="java.io.FilePermission"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket_example.server.FileDataAapter"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket_example.client.Example_02_ReceiveFile"/>
<fullyQualifiedTypeName name="java.util.UUID"/>
<fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.filter.BaseFilter"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.filter.BaseBytesFilter"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="com.sun.org.apache.bcel.internal.generic.LSTORE"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.filter.FileReceiveFilter"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.filter.FileReceiveFilter.FileReceiveFilterListener"/>
<fullyQualifiedTypeName name="java.io.DataInputStream"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.Reader"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="java.io.FileOutputStream"/>
<fullyQualifiedTypeName name="java.nio.charset.Charset"/>
<fullyQualifiedTypeName name="java.nio.CharBuffer"/>
<fullyQualifiedTypeName name="com.sun.corba.se.impl.ior.ByteBuffer"/>
<fullyQualifiedTypeName name="java.io.FileWriter"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.nio.ByteBuffer"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.io.Test"/>
<fullyQualifiedTypeName name="pers.landriesnidis.easysocket.server.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.io.InputStreamReader"/>
<fullyQualifiedTypeName name="java.io.FileInputStream"/>
</qualifiedTypeNameHistroy>
